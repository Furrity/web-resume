// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: profile.sql

package database

import (
	"context"
	"database/sql"
)

const getProfileInfo = `-- name: GetProfileInfo :one
SELECT 
    t_name.text as name,
    t_title.text as title,
    t_about.text as about,
    p.image_url as image_url
FROM profile p
JOIN languages l ON l.code = ?
join translations t_name ON t_name.key = p.name_key AND t_name.language_id = l.id
join translations t_title ON t_title.key = p.title_key and t_title.language_id = l.id
join translations t_about ON t_about.key = p.title_key and t_about.language_id = l.id
where id = 1
`

type GetProfileInfoRow struct {
	Name     string
	Title    string
	About    string
	ImageUrl sql.NullString
}

func (q *Queries) GetProfileInfo(ctx context.Context, code string) (GetProfileInfoRow, error) {
	row := q.db.QueryRowContext(ctx, getProfileInfo, code)
	var i GetProfileInfoRow
	err := row.Scan(
		&i.Name,
		&i.Title,
		&i.About,
		&i.ImageUrl,
	)
	return i, err
}
